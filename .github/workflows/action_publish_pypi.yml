name: Release

on:
  release:
    types:
      - created

jobs:
  publish:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Check if PYPI_TOKEN is accessible
        run: |
          echo "Token length: ${#PYPI_API_TOKEN}"

      - name: Publish to PyPI
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_API_TOKEN
          poetry publish --build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t astrocast:latest astroContainer/
          docker tag astrocast:latest anacgon/astrocast:latest
          docker push anacgon/astrocast:latest

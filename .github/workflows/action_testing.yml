name: Testing from commit

on:
  push:  # Trigger on push events for all branches

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Extract OS from commit message
        id: set-matrix
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          MATRIX="["
          [[ $COMMIT_MSG =~ "ubuntu-latest" ]] && MATRIX+='{"os":"ubuntu-latest","python-version":"3.9"},'
          [[ $COMMIT_MSG =~ "windows-latest" ]] && MATRIX+='{"os":"windows-latest","python-version":"3.9"},'
          [[ $COMMIT_MSG =~ "macos-latest" ]] && MATRIX+='{"os":"macos-latest","python-version":"3.9"},'
          MATRIX="${MATRIX%,}]"
          echo "::set-output name=matrix::${MATRIX}"

  build:
    needs: setup
    if: contains(github.event.head_commit.message, 'test-on:') && needs.setup.outputs.matrix != '[]'
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install -E testing -vvv
      - name: Test with pytest
        run: |
          poetry run pytest --disable-warnings -n auto -m "not vis and not long" --durations=25 --durations-min=30 --dist worksteal --cli-log-level 100
